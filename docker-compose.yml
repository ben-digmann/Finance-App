services:
  web:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000/api
    command: >
      sh -c "cd frontend && npm install &&
             npm start"
    depends_on:
      - api
    restart: unless-stopped

  api:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=development
      - PORT=8000
      - API_BASE_URL=http://localhost:8000
      - FRONTEND_URL=http://localhost:3000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=finance_app
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=dev_jwt_secret_replace_in_production
      - JWT_EXPIRES_IN=7d
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=sandbox
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=debug
    command: >
      sh -c "cd backend && npm install &&
             npm run dev:watch"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=finance_app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Database admin tool
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data: